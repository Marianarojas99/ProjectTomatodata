---
title: "Statistical Yield and Number of fruits"
format: html
editor: visual
---

## Yield

The data is divided into five blocks, six cluster (refers to a group or cluster of tomatoes growing together on the same cluster or stem branch) and five treatments.

**Required libraries**

```{r, warning=FALSE, message=FALSE}
library(ggplot2)
library(readxl)
library(agricolae)
library(multcompView)
library(dplyr)
```

Call the data

df is the data taking into account clusters

```{r, message=FALSE}
library(readxl)
df <- read_excel("DATA/tomato-clean.xlsx", sheet = 2)
dftotal <- read_excel("DATA/tomato-clean.xlsx", sheet = 1)
```

Visualize the tables

```{r}
knitr::kable(df, caption = "Data of yield and Number of fruits")
```

In the "Total table" all clusters are summed up.

```{r}
knitr::kable(dftotal, caption = "Data of yield and Number of fruits ")
```

### Statistical analysis

**Anova**

-   Taking into account clusters:

```{r}
Yieldaov <- aov(yield~Treatment*Block, data = df)
summary(Yieldaov)
```

-   Total yield

```{r}
Yieldtotal <- aov(tfyield~Treatment*Block, data = dftotal)
summary(Yieldtotal)
```

**Interpretation:**

Treatments: In both approaches (total and cluster analysis), the treatment factor is significant. This indicates that, regardless of how you group the data (by total treatment or by cluster), treatments have a clear and significant effect on tomato yield.

Blocks: In both analyses, the blocks are not significant. This suggests that, in this case, blocks do not contribute relevant variability to yield, and a block analysis may be unnecessary.

Interaction: In both cases, there is no significant interaction between treatments and blocks, meaning that the effect of treatments is consistent across blocks (whether you consider clusters separately or totals).

**Test of statistical assumptions**

**Normality**

-   Taking into account clusters:

```{r}
resYield <- residuals(Yieldaov)
shapiro.test(resYield)
```

P-value= 2.997e-12 means that the distribution of the data is no normal.

-   Total yield

```{r}
resYieldtotal <- residuals(Yieldtotal)
shapiro.test(resYieldtotal)
```

P-value = 0.1073 means that data has a normal distribution

Since we are interested in knowing the effect of the treatments and not the effect of the clusters, we continue the analysis with the data that contemplates the total, the one that sum of the clusters.

Visualize the behavior of the data

```{r}
qqnorm(resYieldtotal, main = "Q-Q Plot")
qqline(resYieldtotal, col = "red", lwd = 2) 
hist(resYieldtotal,
     main = "Residuals",
     xlab = "Residuals", 
     col = "lightgreen", 
     border = "black",
     breaks = 20)

```

Post hoc test tukey

```{r}
TukeyHSD(Yieldtotal, "Treatment")
tukey_result <- TukeyHSD(Yieldtotal, "Treatment")
tukey_pvalues <- tukey_result$Treatment[, "p adj"]
tukey_letters <- multcompLetters(tukey_pvalues)$Letters
tukey_letters
```

**Interpretation:**

EXAm ("a"): These plants belong to group "a," indicating that their yield response is significantly better than infected untreated plants (Infes, "b") and different from the untreated healthy control.

Infes + Captan ("bc"): These plants share a group with Infes ("b") and the Control ("c"), indicating that Captan provides moderate improvement, but not enough to restore their condition to the level of healthy plants treated with EXAm ("a").

Infes + EXAm ("ac"): These plants are in an intermediate group ("ac"), showing results similar to EXAm-treated healthy plants ("a") and also overlapping with group "c" (e.g., Captan-treated or untreated controls).

```{r}
ggplot(dftotal, aes(x = Treatment, y = tfyield)) +
  geom_boxplot(aes(fill = Treatment), color = "black") +  # Boxplot con colores
  geom_text(aes(x = Treatment, 
                y = max(dftotal$tfyield) + 1,  # Ajusta segÃºn sea necesario
                label = tukey_letters[as.character(Treatment)]), 
            size = 5) +  # Agregar las letras de Tukey
  labs(title = "Boxplot with Tukey Letters",
       x = "Treatment",
       y = "Yield") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5))
```

\*\*
